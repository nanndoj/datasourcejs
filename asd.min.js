(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){module.exports=function(name){"use strict";this.data=[];this.name=name;this.keys=[];this.enabled=true;this.endpoint=null;this.active={};this.inserting=false;this.editing=false;this.fetchSize=2;this.observers=[];this.rowsPerPage=null;this.append=true;this.headers=null;this._activeValues=null;this.errorMessage="";var cursor=0;var service=null;var _savedProps;var hasMoreResults=false;var busy=false;var _self=this;this.init=function(){service={save:function(object){return this.call(_self.entity,"POST",object,true)},update:function(url,object){return this.call(url,"PUT",object)},remove:function(url){return this.call(url,"DELETE",null,true)},call:function(url,verb,object){var _callback;busy=true;this.$promise=_self.request(verb,url,object,_callback).then(function(response){busy=false;if(_callback)_callback(response.data)},function(response){busy=false;if(_callback)_callback(response.data)});this.$promise.then=function(callback){_callback=callback};return this}};this.isBusy=function(){return busy};this.handleError=function(data){var error="";if(data&&data.status===401){error="Username or passoword invalid!"}else{if(data&&Object.prototype.toString.call(data.responseText)==="[object String]"){var regex=/<h1>(.*)<\/h1>/gim;var result=regex.exec(data.responseText);if(result&&result.length>=2){error=result[1]}else{error=data.responseText}}}this.errorMessage=error}};this.insert=function(obj,callback){service.save(obj).$promise.then(callback)};this.update=function(obj,callback){var keyObj=getKeyValues(obj);var url=this.entity;var suffixPath="";for(var key in keyObj){if(keyObj.hasOwnProperty(key)){suffixPath+="/"+keyObj[key]}}url=url+suffixPath;service.update(url,obj).$promise.then(callback)};this.post=function(){if(this.inserting){this.insert(this.active,function(obj){this.data.push(obj);this.active=obj}.bind(this))}else if(this.editing){this.update(this.active,function(obj){var keyObj=getKeyValues(obj);this.data.forEach(function(currentRow){var found;for(var key in keyObj){if(currentRow[key]&&currentRow[key]===keyObj[key]){found=true}else{found=false}}if(found){this.copy(obj,currentRow)}}.bind(this))}.bind(this))}this.editing=false;this.inserting=false};this.cancel=function(){if(this.inserting){this.active=this.data[0]}this.inserting=false;this.editing=false};this.startInserting=function(){this.inserting=true;this.active={};if(this.onStartInserting){this.onStartInserting()}};this.startEditing=function(item){if(item)this.active=this.copy(item);this.editing=true};this.remove=function(object,callback){var _remove=function(object,callback){if(!object){object=this.active}var keyObj=getKeyValues(object);var suffixPath="";for(var key in keyObj){if(keyObj.hasOwnProperty(key)){suffixPath+="/"+keyObj[key]}}callback=callback||function(){for(var i=0;i<this.data.length;i++){var found;for(var key in keyObj){if(keyObj.hasOwnProperty(key)){if(this.data[i][key]&&this.data[i][key]===keyObj[key]){found=true}else{found=false}}}if(found){this.data.splice(i,1);this.active=i>0?this.data[i-1]:null}}}.bind(this);service.remove(this.entity+suffixPath).$promise.then(callback)}.bind(this);if(this.deleteMessage&&this.deleteMessage.length>0){if(window.confirm(this.deleteMessage)){_remove(object,callback)}}else{_remove(object,callback)}};var getKeyValues=function(rowData){var keyValues={};for(var i=0;i<this.keys.length;i++){keyValues[this.keys[i]]=rowData[this.keys[i]]}return keyValues}.bind(this);this.request=function(verb,url,body){var noop=function(){};var _onSuccess=noop;var _onError=noop;var promise={then:function(successCallback,errorCallback){_onSuccess=successCallback||_onSuccess;_onError=errorCallback||_onError}};var handleRequest=function(){if(this.readyState===4){if(this.status>=200&&this.status<=299){_onSuccess({data:JSON.parse(this.responseText)});_onError=noop}else{_onError({data:this.responseText});_onSuccess=noop}}};var request=new XMLHttpRequest;request.onreadystatechange=handleRequest;request.open(verb,url,true);for(var attribute in this.headers){if(this.headers.hasOwnProperty(attribute)){request.setRequestHeader(attribute,this.headers[attribute])}}request.send(body||"");return promise};this.hasNext=function(){return this.data&&cursor<this.data.length-1};this.hasPrevious=function(){return this.data&&cursor>0};this.order=function(order){_savedProps.order=order};this.getActiveValues=function(){return this.getRowValues(this.active)};this.__defineGetter__("activeValues",function(){return _self.getActiveValues()});this.getRowValues=function(rowData){var arr=[];for(var i in rowData){if(rowData.hasOwnProperty(i)){arr.push(rowData[i])}}return arr};this.next=function(){if(!this.hasNext()){this.nextPage()}this.active=this.copy(this.data[++cursor],{});return this.active};this.nextPage=function(){if(!this.hasNextPage()){return}this.offset=parseInt(this.offset)+parseInt(this.rowsPerPage);this.fetch(_savedProps,{success:function(data){if(!data||data.length<parseInt(this.rowsPerPage)){this.offset=parseInt(this.offset)-this.data.length}}})};this.prevPage=function(){if(!this.append&&!this.preppend){this.offset=parseInt(this.offset)-this.data.length;if(this.offset<0){this.offset=0}else if(this.offset>=0){this.fetch(_savedProps,{success:function(data){if(!data||data.length===0){this.offset=0}}})}}};this.hasNextPage=function(){return hasMoreResults&&this.rowsPerPage!=-1};this.hasPrevPage=function(){return this.offset>0&&!this.append&&!this.prepend};this.previous=function(){if(!this.hasPrevious())throw"Dataset Overflor Error";this.active=this.copy(this.data[--cursor],{});return this.active};this.goTo=function(rowId){for(var i=0;i<this.data.length;i++){if(this.data[i][this.key]===rowId){cursor=i;this.active=this.copy(this.data[cursor],{});return this.active}}};this.getCursor=function(){return cursor};this.filter=function(url){var oldoffset=this.offset;this.offset=0;this.fetch({path:url},{beforeFill:function(){this.cleanup()},error:function(){this.offset=oldoffset}})};this.cleanup=function(){this.offset=0;this.data=[];this.cursor=-1;this.active=null;hasMoreResults=false};this.current=function(){return this.active||this.data[0]};this.fetch=function(properties,callbacksObj){if(this.busy)return;if(!this.enabled){this.cleanup();return}var props=properties||{};var callbacks=callbacksObj||{};props.params=props.params||{};var resourceURL=this.entity+(props.path||"");if(this.rowsPerPage>0){props.params.limit=this.rowsPerPage;props.params.offset=this.offset}_savedProps=props;busy=true;this.$promise=this.request("GET",resourceURL,props.params).then(function(response){busy=false;sucessHandler(response.data)}.bind(this),function(response){busy=false;this.handleError(response.data);if(callbacks.error)callbacks.error.call(this,response.data)}.bind(this));var sucessHandler=function(data){if(data){if(Object.prototype.toString.call(data)!=="[object Array]"){data=[data]}if(callbacks.beforeFill)callbacks.beforeFill.apply(this,this.data);if(this.prepend)this.data=data.concat(this.data);if(this.append)this.data=this.data.concat(data);if(!this.prepend&&!this.append){this.data=data;this.active=data[0];cursor=0}if(callbacks.success)callbacks.success.call(this,data);hasMoreResults=data.length>=this.rowsPerPage}}.bind(this)};this.copy=function(from,to){if(from===null||Object.prototype.toString.call(from)!=="[object Object]")return from;to=to||{};for(var key in from){if(from.hasOwnProperty(key)&&key.indexOf("$")==-1){to[key]=this.copy(from[key])}}return to}}},{}],2:[function(require,module,exports){var Datasource=require("./core/datasource.js");angular.module("datasourcejs",[]).factory("DatasourceManager",["$http","$q","$timeout","$rootScope",function($http,$q,$timeout,$rootScope){"use strict";this.datasources={};this.storeDatasource=function(datasource){this.datasources[datasource.name]=datasource};this.initDatasource=function(props){var dts=new Datasource(props.name);dts.request=function(verb,url,object){return $http({method:verb,url:url,data:object?JSON.stringify(object):null,headers:this.headers})};dts.entity=props.entity;dts.keys=props.keys&&props.keys.length>0?props.keys.split(","):[];dts.rowsPerPage=props.rowsPerPage?props.rowsPerPage:100;dts.append=props.append;dts.prepend=props.prepend;dts.endpoint=props.endpoint;dts.filterURL=props.filterURL;dts.autoPost=props.autoPost;dts.deleteMessage=props.deleteMessage;dts.enabled=props.enabled;dts.offset=props.offset?props.offset:0;if(props.headers&&props.headers.length>0){dts.headers={};var headers=props.headers.trim().split(";");var header;for(var i=0;i<headers.length;i++){header=headers[i].split(":");if(header.length===2){dts.headers[header[0]]=header[1]}}}dts.init();this.storeDatasource(dts);if(!props.lazy&&Object.prototype.toString.call(props.watch)!=="[object String]"&&!props.filterURL){var queryObj={};dts.fetch({params:queryObj},{success:function(data){if(data&&data.length>0){this.active=data[0];this.cursor=0}}})}if(props.lazy&&props.autoPost){dts.startAutoPost()}if(props.watch&&Object.prototype.toString.call(props.watch)==="[object String]"){this.registerObserver(props.watch,dts);dts.watchFilter=props.watchFilter}if(props.filterURL&&props.filterURL.length>0){dts.filter(props.filterURL)}$rootScope.$watch(function(){return dts.active},function(){dts._activeValues=dts.getRowValues(this.active)},true);if(props.global!=="false"){$rootScope[dts.name]=dts;window[dts.name]=dts}return dts};return this}]).directive("datasource",["DatasourceManager","$timeout",function(DatasourceManager,$timeout){return{restrict:"E",scope:true,template:"",link:function(scope,element,attrs){var init=function(){var props={name:attrs.name,entity:attrs.entity,enabled:attrs.hasOwnProperty("enabled")?attrs.enabled==="true":true,keys:attrs.keys,endpoint:attrs.endpoint,lazy:attrs.hasOwnProperty("lazy")&&attrs.lazy===""||attrs.lazy==="true",append:!attrs.hasOwnProperty("append")||attrs.append==="true",prepend:attrs.hasOwnProperty("prepend")&&attrs.prepend===""||attrs.prepend==="true",watch:attrs.watch,rowsPerPage:attrs.rowsPerPage,offset:attrs.offset,filterURL:attrs.filter,watchFilter:attrs.watchFilter,deleteMessage:attrs.deleteMessage,headers:attrs.headers,autoPost:attrs.hasOwnProperty("autoPost")&&attrs.autoPost===""||attrs.autoPost==="true"};var firstLoad={filter:true,entity:true,enabled:true};var datasource=DatasourceManager.initDatasource(props);var timeoutPromise;attrs.$observe("filter",function(value){if(!firstLoad.filter){$timeout.cancel(timeoutPromise);timeoutPromise=$timeout(function(){datasource.filter(value)},200)}else{$timeout(function(){firstLoad.filter=false})}});attrs.$observe("enabled",function(value){if(!firstLoad.enabled){datasource.enabled=value==="true";datasource.fetch({params:{}})}else{$timeout(function(){firstLoad.enabled=false})}});attrs.$observe("entity",function(value){datasource.entity=value;if(!firstLoad.entity){datasource.fetch({params:{}})}else{$timeout(function(){firstLoad.entity=false})}})};init()}}}]).directive("datasourceName",["DatasourceManager","$parse",function(DatasourceManager,$parse){return{restrict:"A",scope:true,link:function(scope,element,attrs){scope.data=DatasourceManager.datasources;if(scope.data[attrs.datasourceName]){scope.datasource=scope.data[attrs.datasourceName]}else{scope.datasource={};scope.datasource.data=$parse(attrs.datasourceName)(scope)}}}}])},{"./core/datasource.js":1}]},{},[2]);